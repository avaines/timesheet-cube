blueprint:
  name: Aqara Cube face-based
  description: Control devices based on the cube's face.
  domain: automation
  input:
    last_face_input:
      name: Last face up numeric helper
      description: Please select a Numeric Helper to be used to record the last face up.
      selector:
        entity:
          domain: input_number
    cube:
      name: Aqara Cube
      description: Select the Aqara Cube device
      selector:
        device:
          integration: zha
          manufacturer: LUMI
    face_1_flip:
      name: Flip to face 1
      description: Actions to execute when the cube is flipped to face 1 in the top.
      default: []
      selector:
        action: {}
    face_2_flip:
      name: Flip to face 2
      description: Actions to execute when the cube is flipped to face 2 in the top.
      default: []
      selector:
        action: {}
    face_3_flip:
      name: Flip to face 3
      description: Actions to execute when the cube is flipped to face 3 in the top.
      default: []
      selector:
        action: {}
    face_4_flip:
      name: Flip to face 4
      description: Actions to execute when the cube is flipped to face 4 in the top.
      default: []
      selector:
        action: {}
    face_5_flip:
      name: Flip to face 5
      description: Actions to execute when the cube is flipped to face 5 in the top.
      default: []
      selector:
        action: {}
    face_6_flip:
      name: Flip to face 6
      description: Actions to execute when the cube is flipped to face 6 in the top.
      default: []
      selector:
        action: {}
  source_url: https://community.home-assistant.io/t/aqara-cube-zha-simplified-face-based-device-control/388850
mode: restart
max_exceeded: silent
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input cube
action:
- variables:
    command: '{{ trigger.event.data.command }}'
    value: '{{ trigger.event.data.args.value | default(0) }}'
    flip_degrees: '{{ trigger.event.data.args.flip_degrees | default(0) }}'
    relative_degrees: '{{ trigger.event.data.args.relative_degrees | default(0) }}'
    temp_last_face_input: !input last_face_input
    activated_face: '{{ iif((command == ''slide'' or command == ''knock'' or command == ''flip''), trigger.event.data.args.activated_face, states(temp_last_face_input)) | int(0) }}'
    #activated_face: |-
      #{% if command == 'slide' or command == 'knock' or command == 'flip' %}
        #{{ trigger.event.data.args.activated_face | int(0) }}
      #{% else %}
        #{{ states(temp_last_face_input) | int(0) }}
      #{% endif %}
- service: input_number.set_value
  target:
    entity_id: !input last_face_input
  data:
    value: '{{ activated_face }}'
- choose:
  - conditions:
      - '{{ activated_face == 1 }}'
    sequence:
      - choose:
        - conditions:
            - '{{ command == ''flip'' }}'
          sequence: !input face_1_flip
        default: []
  - conditions:
      - '{{ activated_face == 2 }}'
    sequence:
      - choose:
        - conditions:
            - '{{ command == ''flip'' }}'
          sequence: !input face_2_flip
        default: []
  - conditions:
      - '{{ activated_face == 3 }}'
    sequence:
      - choose:
        - conditions:
            - '{{ command == ''flip'' }}'
          sequence: !input face_3_flip
        default: []
  - conditions:
      - '{{ activated_face == 4 }}'
    sequence:
      - choose:
        - conditions:
            - '{{ command == ''flip'' }}'
          sequence: !input face_4_flip
        default: []
  - conditions:
      - '{{ activated_face == 5 }}'
    sequence:
      - choose:
        - conditions:
            - '{{ command == ''flip'' }}'
          sequence: !input face_5_flip
        default: []
  - conditions:
      - '{{ activated_face == 6 }}'
    sequence:
      - choose:
        - conditions:
            - '{{ command == ''flip'' }}'
          sequence: !input face_6_flip
        default: []
  default: []